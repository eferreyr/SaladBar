@model IEnumerable<SaladBarWeb.Models.DataEntryViewModels.TrayTypeViewModel>

@{
    ViewData["Title"] = "Tray Types";
}

<h2>All General Tray Types</h2>

@Html.ActionLink("Add New Tray Types", "AddTrayTypes", "DataEntry") |
@Html.ActionLink("Edit Tray Types", "EditTrayTypes", "DataEntry")

@foreach (var item in Model)
{
    <div class="form-horizontal well">
        <div class="form-group">
            @Html.LabelFor(x => item.Type, new { @class = "col-sm-2  control-label" })
            <div class="col-sm-10">
                <p class="form-control-static">@Html.DisplayFor(x => item.Type)</p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => item.Active, new { @class = "col-sm-2  control-label" })
            <div class="col-sm-10">
                <p class="form-control-static">@Html.DisplayFor(x => item.Active)</p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => item.CreatedBy, new { @class = "col-sm-2  control-label" })
            <div class="col-sm-10">
                <p class="form-control-static">@Html.DisplayFor(x => item.CreatedBy)</p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => item.ModifiedBy, new { @class = "col-sm-2  control-label" })
            <div class="col-sm-10">
                <p class="form-control-static">@Html.DisplayFor(x => item.ModifiedBy)</p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => item.DtModified, new { @class = "col-sm-2  control-label" })
            <div class="col-sm-10">
                <p class="form-control-static">@Html.DisplayFor(x => item.DtModified)</p>
            </div>
        </div>
        @Html.ActionLink("Edit Tray Type", "EditTrayTypes", "DataEntry", new { trayTypeId = item.Id})
    </div>
}